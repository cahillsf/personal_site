apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongod
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      role: mongo
  template:
    metadata:
      labels:
        role: mongo
        environment: test
        replicaset: MainRepSet
      annotations:
        ad.datadoghq.com/tags: '{"app": "ps-mongo","role": "database", "library":"mongodb"}'
        ad.datadoghq.com/ps-mongo.logs: '[{"source":"mongodb","service":"ps-mongo"}]'
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: secret-volume
          secret:
            secretName: shared-bootstrap-data
            defaultMode: 256
      containers:
        - name: mongod-container
          # image: cahillsf/ps-mongo:ss
          image: cahillsf/ps-mongo:ss2
          # image: mongo
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
          command:
            - "mongod"
            - "--bind_ip"
            - "0.0.0.0"
            - "--replSet"
            - "MainRepSet"
            - "--auth"
            - "--clusterAuthMode"
            - "keyFile"
            - "--keyFile"
            - "/etc/secret-volume/internal-auth-mongodb-keyfile"
            - "--setParameter"
            - "authenticationMechanisms=SCRAM-SHA-1"
          resources:
            requests:
              cpu: 0.2
              memory: 200Mi
          volumeMounts:
            - name: secret-volume
              readOnly: true
              mountPath: /etc/secret-volume
            - name: mongodb-persistent-storage-claim
              mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongodb-persistent-storage-claim
      annotations:
        volume.beta.kubernetes.io/storage-class: "standard"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi